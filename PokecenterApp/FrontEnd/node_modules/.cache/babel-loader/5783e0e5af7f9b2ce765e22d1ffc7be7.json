{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT } from \"./types\";\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post(\"/streams\", formValues);\n\n              case 2:\n                response = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; // export const createStream = (formValues) => {\n//     return (dispatch) => {\n//     }\n// };","map":{"version":3,"sources":["C:\\Users\\cevan\\Documents\\reactTutorialThing\\streams\\client\\src\\actions\\index.js"],"names":["streams","SIGN_IN","SIGN_OUT","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","response"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,SAAlC;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,OADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACjBV,OAAO,CAACW,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADiB;;AAAA;AAClCG,gBAAAA,QADkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B,C,CAIP;AACA;AAEA;AACA","sourcesContent":["import streams from \"../apis/streams\";\r\nimport { SIGN_IN, SIGN_OUT } from \"./types\";\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const createStream = formValues => async dispatch => {\r\n  const response = await streams.post(\"/streams\", formValues);\r\n};\r\n\r\n// export const createStream = (formValues) => {\r\n//     return (dispatch) => {\r\n\r\n//     }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}