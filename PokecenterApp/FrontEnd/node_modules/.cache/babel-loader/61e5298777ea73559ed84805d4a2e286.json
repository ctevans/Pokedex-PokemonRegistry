{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post(\"/streams\", formValues);\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStreams = function fetchStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get(\"/streams\", formValues);\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_STREAMS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStream = function fetchStream(streamId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get(\"/streams/\".concat(streamId), formValues);\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: FETCH_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; // export const createStream = (formValues) => {\n//     return (dispatch) => {\n//     }\n// };","map":{"version":3,"sources":["C:\\Users\\cevan\\Documents\\reactTutorialThing\\streams\\client\\src\\actions\\index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","response","data","fetchStreams","get","fetchStream","streamId"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AAUA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACjBf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADiB;;AAAA;AAClCG,gBAAAA,QADkC;AAExCF,gBAAAA,QAAQ,CAAC;AAAEL,kBAAAA,IAAI,EAAEP,aAAR;AAAuBQ,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAzC,iBAAD,CAAR;;AAFwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;AAKP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACTf,OAAO,CAACoB,GAAR,CAAY,UAAZ,EAAwBN,UAAxB,CADS;;AAAA;AAC1BG,gBAAAA,QAD0B;AAEhCF,gBAAAA,QAAQ,CAAC;AAAEL,kBAAAA,IAAI,EAAEN,aAAR;AAAuBO,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAzC,iBAAD,CAAR;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAKP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMP,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACdf,OAAO,CAACoB,GAAR,oBAAwBE,QAAxB,GAAoCR,UAApC,CADc;;AAAA;AAC/BG,gBAAAA,QAD+B;AAErCF,gBAAAA,QAAQ,CAAC;AAAEL,kBAAAA,IAAI,EAAEL,YAAR;AAAsBM,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAxC,iBAAD,CAAR;;AAFqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B,C,CAKP;AACA;AAEA;AACA","sourcesContent":["import streams from \"../apis/streams\";\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  FETCH_STREAMS,\r\n  FETCH_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from \"./types\";\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const createStream = formValues => async dispatch => {\r\n  const response = await streams.post(\"/streams\", formValues);\r\n  dispatch({ type: CREATE_STREAM, payload: response.data });\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n  const response = await streams.get(\"/streams\", formValues);\r\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const fetchStream = streamId => async dispatch => {\r\n  const response = await streams.get(`/streams/${streamId}`, formValues);\r\n  dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\n// export const createStream = (formValues) => {\r\n//     return (dispatch) => {\r\n\r\n//     }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}