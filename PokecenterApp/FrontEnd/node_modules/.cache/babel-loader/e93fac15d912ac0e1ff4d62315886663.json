{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\cevan\\\\Documents\\\\reactTutorialThing\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from \"react\";\nimport flv from \"flv.js\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamShow, _React$Component);\n\n  function StreamShow(props) {\n    var _this;\n\n    _classCallCheck(this, StreamShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).call(this, props));\n    _this.videoRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id.id;\n      this.props.fetchStream(id);\n      this.buildPlayer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.buildPlayer();\n    }\n  }, {\n    key: \"buildPlayer\",\n    value: function buildPlayer() {\n      if (this.player || !this.props.stream) {\n        return;\n      }\n\n      var id = this.props.match.params.id.id;\n      this.player = flv.createPlayer({\n        type: \"flv\",\n        url: \"http://localhost:8000/live/\".concat(id, \".flv\")\n      });\n      this.player.attachMediaElement(this.videoRef.current);\n      this.player.load(); // this.player.play();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading... :)\");\n      }\n\n      var _this$props$stream = this.props.stream,\n          title = _this$props$stream.title,\n          description = _this$props$stream.description;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: \"100%\"\n        },\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, title), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, description));\n    }\n  }]);\n\n  return StreamShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:\\Users\\cevan\\Documents\\reactTutorialThing\\streams\\client\\src\\components\\streams\\StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","props","videoRef","createRef","id","match","params","buildPlayer","player","stream","createPlayer","type","url","attachMediaElement","current","load","title","description","width","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AAFiB;AAGlB;;;;wCAEmB;AAAA,UACVC,EADU,GACH,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBF,EADrB,CACVA,EADU;AAGlB,WAAKH,KAAL,CAAWF,WAAX,CAAuBK,EAAvB;AACA,WAAKG,WAAL;AACD;;;yCAEoB;AACnB,WAAKA,WAAL;AACD;;;kCAEa;AACZ,UAAI,KAAKC,MAAL,IAAe,CAAC,KAAKP,KAAL,CAAWQ,MAA/B,EAAuC;AACrC;AACD;;AAHW,UAKJL,EALI,GAKG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBF,EAL3B,CAKJA,EALI;AAOZ,WAAKI,MAAL,GAAcX,GAAG,CAACa,YAAJ,CAAiB;AAC7BC,QAAAA,IAAI,EAAE,KADuB;AAE7BC,QAAAA,GAAG,uCAAgCR,EAAhC;AAF0B,OAAjB,CAAd;AAIA,WAAKI,MAAL,CAAYK,kBAAZ,CAA+B,KAAKX,QAAL,CAAcY,OAA7C;AACA,WAAKN,MAAL,CAAYO,IAAZ,GAZY,CAaZ;AACD;;;6BAEQ;AACP,UAAI,CAAC,KAAKd,KAAL,CAAWQ,MAAhB,EAAwB;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACD;;AAHM,+BAIwB,KAAKR,KAAL,CAAWQ,MAJnC;AAAA,UAICO,KAJD,sBAICA,KAJD;AAAA,UAIQC,WAJR,sBAIQA,WAJR;AAMP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,GAAG,EAAE,KAAKf,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAAEgB,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAqD,QAAA,QAAQ,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,KAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,WAAL,CAHF,CADF;AAOD;;;;EA9CsBrB,KAAK,CAACuB,S;;AAiD/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AAAEb,IAAAA,MAAM,EAAEY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACjB,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CACpBsB,eADoB,EAEpB;AAAErB,EAAAA,WAAW,EAAXA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport flv from \"flv.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\n\r\nclass StreamShow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.videoRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params.id;\r\n\r\n    this.props.fetchStream(id);\r\n    this.buildPlayer();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.buildPlayer();\r\n  }\r\n\r\n  buildPlayer() {\r\n    if (this.player || !this.props.stream) {\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params.id;\r\n\r\n    this.player = flv.createPlayer({\r\n      type: \"flv\",\r\n      url: `http://localhost:8000/live/${id}.flv`\r\n    });\r\n    this.player.attachMediaElement(this.videoRef.current);\r\n    this.player.load();\r\n    // this.player.play();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.stream) {\r\n      return <div>Loading... :)</div>;\r\n    }\r\n    const { title, description } = this.props.stream;\r\n\r\n    return (\r\n      <div>\r\n        <video ref={this.videoRef} style={{ width: \"100%\" }} controls />\r\n        <h1>{title}</h1>\r\n        <h5>{description}</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchStream }\r\n)(StreamShow);\r\n"]},"metadata":{},"sourceType":"module"}